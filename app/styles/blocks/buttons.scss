// mixins
// placeholders

// BLOCK
// btn

// ELEMENTS
//  __icon
//  __count

// MODIFIERS
// ## Misc ##
// --icon
// --disabled
// --is-toggle (--on) (--disabled)

// ## Themes ##
// --leaf
// --leaf-ghost
// --green-ghost
// --inverted
// --link
// --text
// --text-inverted
// --success

// ## Size ##
// --xxs
// --xs
// --md

// CONTAINER
// -group

// CONTAINER MODIFIERS
// -group--xxs
// -group--xs

// MIXINS
// Se o botão possuir states, ele deverá esconder os elementos internos e
// deverá possuir um conteúdo ::before para segurar a altura do botão.
// @mixin btn--has-state {
//     overflow: hidden;

//     &::before {
//         content: '';
//         display: inline-block;
//         height: 1em;
//         opacity: 0;
//         visibility: hidden;
//         width: 1em;
//     }
// }

// PLACEHOLDERS
%btn-steps {
  @include transition();

  align-items: center;
  bottom: 0;
  display: flex;
  justify-content: center;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 2;
}

.btn {
  $this: &;

  $bg-light: $clickables-bg-color;
  $bg-dark: $clickables-bg-color-dark;

  @include button;

  background-color: $bg-light;
  background-image: linear-gradient(to top, $bg-dark, $bg-light);
  border-radius: $button-radius;
  color: $clickables-color;
  cursor: pointer;
  flex: 0 0 auto;
  padding: 1em 1.5em;
  transition: 200ms cubic-bezier(.455, .03, .515, .955); // IE fallback
  transition: 200ms var(--ease-in-out-quad);

  &:hover {
    background-color: $green-60;
    background-image: linear-gradient(to top, $green-60, $green-40);
  }

  // ELEMENTS
  &__count {
    font-style: italic;
    opacity: .85;
    margin-left: $distance--xxs;
  }

  &__icon {
    font-weight: bold;
    margin-right: $distance--xs;
    opacity: .65;
  }

  // MODIFIERS
  &--icon {
    $size: 3rem;

    align-items: center;
    border-radius: $radius;
    display: inline-flex;
    height: $size;
    justify-content: center;
    padding: 0;
    width: $size;

    &::before {
      align-items: center;
      display: flex;
      height: 1em;
      justify-content: center;
      width: 1em;
    }

    // SANITIZER
    span {
      display: block;
      outline: 10px solid crimson;
      text-align: center;

      &::before {
        content: 'SPAN DESNECESSÁRIO'
      }
    }
  }

  &--near-form {
    height: 40px;
    font-size: 1.25rem;
    width: 40px;
  }

  &--disabled {
    cursor: not-allowed;
    opacity: .5;
    pointer-events: none;
  }

  &--is-toggle {
    height: 1rem;
    line-height: 1.25;
    justify-content: flex-start;
    overflow: hidden;
    position: relative;
    text-align: left;

    &:focus,
    &:hover {
      background-color: transparent;
    }

    [class*='__default'] {
      @extend %btn-steps;

      height: 100%;
      position: absolute;
    }

    [class*='__active'],
    [class*='__disabled'] {
      @extend %btn-steps;

      transform: translateY(-100%);
    }

    &--on {
      [class*='__default'] {
        transform: translateY(100%);
      }

      [class*='__active'] {
        transform: translateY(0);
      }
    }

    &--disabled {
      [class*='__default'] {
        transform: translateY(100%);
      }

      [class*='__disabled'] {
        transform: translateY(0);
      }

      &:hover {
        background-color: transparentize($black, .85);
        background-image: none;
      }

    }

  }





  // THEMES
  &--leaf {
    background-color: $leaf-40;
    background-image: linear-gradient(to top, $leaf-50, $leaf-40);
    color: $white;

    &:hover {
      background-color: $leaf-60;
      background-image: none;
    }

  }

  &--leaf-ghost {
    background-color: transparent;
    background-image: none;
    border: 1px solid $leaf-40;
    color: $leaf-50;

    &:hover {
      background-color: $leaf-5;
      background-image: none;
    }

  }

  &--green-ghost {
    background-color: transparent;
    background-image: none;
    border: 1px solid $green-40;
    color: $green-50;

    &:hover {
      background-color: $green-5;
      background-image: none;
    }

  }

  &--link {
    @include dotted-link;

    &:hover {
      background-color: transparent;
      background-image: none;
    }

  }

  &--text {
    background-color: transparent;
    background-image: none;
    color: $gray-60;
    opacity: .75;
    padding: 0;
    text-shadow: none;
    transition: 200ms cubic-bezier(.455, .03, .515, .955); // IE fallback
    transition: 200ms var(--ease-in-out-quad);

    &:hover {
      background-color: transparent;
      background-image: none;
      opacity: 1;
    }

  }

  &--text-inverted {
    background-color: transparent;
    background-image: none;
    color: $white;
    padding: 0;
    text-shadow: none;

    &:hover {
      background-color: transparent;
      background-image: none;
      opacity: 1;
      transform: translateY(0);
    }

  }

  &--success {
    background-color: saturate(darken($color-success, 6%), 6%);
    background-image: none;

    &:hover {
      background-color: saturate(darken($color-success, 8%), 8%);
      background-image: none;
    }

  }

  &-close {
    background-color: transparent;
    border-radius: $radius;
    font-size: 1.25em;
    padding: $distance--xs;
    position: absolute;
    right: 0;
    top: 0;
    transition: 200ms cubic-bezier(.455, .03, .515, .955); // IE fallback
    transition: 200ms var(--ease-in-out-quad);
    z-index: 2;

    &:hover {
        background-color: $gray-5;
    }

  }

  // Sizes
  &--xxs {
    font-size: $font-size--xxs * .65;
    letter-spacing: $letter-spacing--xl;
  }

  &--xs {
    font-size: $font-size--xs * .65;
    letter-spacing: $letter-spacing--lg;
  }

  &--md {
    font-size: $font-size--md * .6;
  }

  &--lg {
    font-size: $font-size--lg * .6;
  }

  // Container
  &-group {

    >*:not(:last-child) {
      margin-right: $distance--sm;
    }

    &--xxs {
      >*:not(:last-child) {
        margin-right: $distance--xxs;
      }

    }

    &--xs {
      >*:not(:last-child) {
        margin-right: $distance--xs;
      }

    }

  }

}