$popover-bg-color: $gray-0;
$popover-tip-size: 10px;
$popover-distance: $popover-tip-size * 2;

.popover {
    $this: &;

    display: inline-block;

    @include  z-index('popover');
    overflow: visible;
    position: relative;

    &::before {
        background-color: $overlayer-color;
        bottom: 0;
        content: '';
        opacity: 0;
        position: fixed;
        left: 0;
        right: 0;
        top: 0;
        transition: 200ms cubic-bezier(.455, .03, .515, .955); // IE fallback
        transition: 200ms var(--ease-in-out-quad);
        visibility: hidden;
        z-index: 1;

        // Não precisa de overlayer em telas em que o popover não ocupa a "tela toda".
        @include media('>sm') {
            display: none;
        }

    }

    // Mostra overlayer quando o popover for aberto.
    &[class*='is-show']::before {
        opacity: 1;
        visibility: visible;
    }


    &__close {
        position: absolute;
        right: $distance--xs;
        top: $distance--xs;
    }

    &__balloon {
        $margin: $distance--md;

        background-color: $popover-bg-color;
        border-radius: $radius;
        box-shadow: $shadow-1, $shadow-3, $shadow-h-l-3, $shadow-h-r-3;
        left: 50%;
        max-height: calc(100vh - #{$header-height} - (2 * #{$margin}));
        opacity: 0;
        padding: $distance--md;
        position: fixed;
        top: calc(#{$header-height} + #{$margin});
        transform: translate(-50%, $popover-distance);
        transition: 200ms cubic-bezier(.455, .03, .515, .955); // IE fallback
        transition: 200ms var(--ease-in-out-quad);
        visibility: hidden;
        width: calc(100vw - (2 * #{$margin}));
        z-index: 2;

        [class*='is-show'] & {
            opacity: 1;
            visibility: visible;
            transform: translate(-50%, 0);
        }

        @include media('>sm') {
            height: auto;
            left: unset;
            height: auto;
            min-width: 20rem;
            position: absolute;
            top: unset;
            transform: none;
            width: auto;

            &::before {
                border-color: currentColor transparent transparent transparent;
                border-style: solid;
                border-width: $popover-tip-size;
                color: $white;
                content: '';
                filter: drop-shadow(4px 0px 2px rgba(26, 26, 26, .1));
                position: absolute;
            }

        }

        @include media('>lg') { min-width: 24rem; }

        // Abaixo de sm o comportamento é padrão tomando quase toda a tela
        @include media('>sm') {
            &--left {
                right: calc(100% + #{$popover-distance});
                top: 50%;
                transform: translate($popover-distance, -50%);

                &::before {
                    border-color: transparent transparent transparent $popover-bg-color;
                    left: 100%;
                    top: 50%;
                    transform: translateY(-50%);
                }

                [class*='is-show'] & {
                    transform: translate(0, -50%);
                }

            }

            &--left-top {
                right: calc(100% + #{$popover-distance});
                top: 50%;
                transform: translate($popover-distance, -20%);

                &::before {
                    border-color: transparent transparent transparent $popover-bg-color;
                    left: 100%;
                    top: 20%;
                    transform: translateY(-50%);
                }

                [class*='is-show'] & {
                    transform: translate(0, -20%);
                }
            }

            &--right-top {
                left: calc(100% + #{$popover-distance});
                top: 50%;
                transform: translate($popover-distance, -20%);

                &::before {
                    border-color: transparent transparent transparent $popover-bg-color;
                    right: 100%;
                    top: 20%;
                    transform: translateY(-50%);
                }

                [class*='is-show'] & {
                    transform: translate(0, -20%);
                }
            }

            &--right-bottom {
                left: calc(100% + #{$popover-distance});
                bottom: 50%;
                transform: translate($popover-distance, 15%);

                &::before {
                    border-color: transparent transparent transparent $popover-bg-color;
                    bottom: 13%;
                    right: 100%;
                    transform: translateX(0%) rotate(180deg);
                }

                [class*='is-show'] & {
                    transform: translate(0, 15%);
                }
            }
        }

        &--lemon {
            $color: $lemon-60;

            @include text-contrast($color);

            background-color: $color;
            &::before {
                color: $color;
            }
        }

    }

}