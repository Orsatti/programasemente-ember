//------------------------------------
//    #FLOW
//------------------------------------
@each $measure, $distance in $distances {
    .flow-#{$measure} {
        > * + * {
            margin-top: $distance;
        }
    }
}

@each $measure, $distance in $distances {
    .flow-h-#{$measure} {
        > * + * {
            margin-left: $distance;
        }
    }
}

.two-col-wrap {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: $distance--sm;

    > * {
        flex: 0 0 auto;
        width: calc(50% - (#{$distance--sm} / 2));
    }
}

@keyframes blink--green10 {
    from    { background-color: $green-10; }
    to      { background-color: transparent; }
}

@keyframes blink--warning {
    from    { background-color: $warning-30; }
    to      { background-color: transparent; }
}

.blink {
    position: relative;

    > * {
        position: relative;
        z-index: 2;
    }

    &::before {
        $size: $distance--sm;

        animation: blink--green10 3s ease-in-out 0s 1 normal forwards;
        bottom: -$size;
        content: '';
        left: -$size;
        position: absolute;
        right: -$size;
        top: -$size;
        z-index: 1;
    }

    // Theme
    &--warning::before {
        animation-name: blink--warning;
    }

    // Speed
    &--fast::before {
        animation-duration: 1s;
    }
}

.bg--students {
    background-color: $blue-navy-60;
    background-image: url('/assets/img/bg--login.jpg');
    background-position: bottom;
    background-repeat: no-repeat;
    background-size: cover;
}

.logo__subproduct {
    font-size: 24px;
    font-family: FilsonSoft-Bold, Filson Soft;
    font-weight: 700;
    letter-spacing: 0.0225em;
}

.divider {
    @include divider($pos: "bottom");
}

.overflow-hidden { overflow: hidden; }
.pos-rel { position: relative; }
.small { font-size: .75em; }
.fs-i { font-style: italic; }
.strong { font-weight: bolder; }
.ta-c { text-align: center; }
.ta-l { text-align: left; }
.td-u { text-decoration: underline; }
.tt-u { text-transform: uppercase; }
.ws-i { white-space: initial; }
.w100 { width: 100%; }
.w-auto { width: auto; }
.child-v--center { 
    position: relative;
    > * {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
    }
} 

.scr-only {
    height: 1px;
    left: -10000px;
    overflow: hidden;
    position: absolute;
    top: auto;
    width: 1px;
}

.shadow-1 { box-shadow: $shadow-1; }
.shadow-2 { box-shadow: $shadow-2; }
.shadow-3 { box-shadow: $shadow-3; }
.shadow-4 { box-shadow: $shadow-4; }
.shadow-5 { box-shadow: $shadow-5; }

.truncate {
    @include truncate;
    display: block;
}

.numbers {
    font-feature-settings: 'tnum';
    font-variant-numeric: tabular-nums;
}

[class*='stealth-info']{
    bottom: $distance--xs;
    left: 50%;
    pointer-events: none;
    position: absolute;
    transform: translateX(-50%);
}
.stealth-info-navbar {
    color: desaturate(lighten($course-nav-bg-color, $amount: 1.5%), $amount: 3%);
}

.stealth-info-congrats {
    color: desaturate(lighten($transition-bg-color, $amount: 15%), $amount: 14%);
}

.filters {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;

    > * {
        flex: 0 0 100%;
        margin-bottom: $distance--sm;

        @include media('>sm') {
            flex: 1 0 40%;
            margin-right: $distance--sm;

            &:nth-child(even) {
                margin-right: 0;
            }
        }

        @include media('>md') {
            flex: 0 0 30%;

            &:nth-child(even) {
                margin-right: initial;
            }

            &:nth-child(n + 3) {
                margin-right: 0;
            }

        }

        @include media('>lg') {
            flex: 1 0 40%;

            &:nth-child(n + 3) {
                margin-right: initial;
            }

            &:nth-child(even) {
                margin-right: 0;
            }

        }
    }

}

.grow-wrap {
    // Easy way to plop the elements on top of each other and have them both sized based on the tallest one's height
    display: grid;

    &::after {
        // Note the weird space! Needed to preventy jumpy behavior
        content: attr(data-replicated-value) " ";

        // This is how textarea text behaves
        white-space: pre-wrap;

        // Hidden from view, clicks, and screen readers
        visibility: hidden;
    }

    & > textarea {
        // Prevent textarea from having a fixed height defined elsewhere
        height: auto;

        // You could leave this, but after a user resizes, then it ruins the auto sizing
        resize: none;

        // Firefox shows scrollbar on growth, you can hide like this.
        overflow: hidden;
    }

    & > textarea,
    &::after {
        // Identical styling required!!
        border: $focus-indicator;
        padding: $form-h-padding;
        font: inherit;

        // Place on top of each other
        grid-area: 1 / 1 / 2 / 2;
    }

}